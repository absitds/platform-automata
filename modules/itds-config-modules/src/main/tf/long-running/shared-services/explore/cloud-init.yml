# Update apt database on first boot (run 'apt-get update').
# Note, if packages are given, or package_upgrade is true, then
# update will be done independent of this setting.
package_update: false
# Upgrade the instance on first boot
# (ie run apt-get upgrade)
package_upgrade: true

disk_setup:
  /dev/sdc:
    table_type: 'mbr'
    layout: true
    overwrite: false

fs_setup:
  - filesystem: 'ext4'
    device: '/dev/sdc'
    overwrite: false

mounts:
 - [ sdc, /data, "auto", "defaults,nofail", "1", "2" ]

# Install additional packages on first boot
packages:
 - git-core

runcmd:
  - 'sudo apt-get -y install apt-transport-https lsb-release dirmngr ca-certificates curl software-properties-common'
  - 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -'
  - 'sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"'
  - 'AZ_REPO=$(lsb_release -cs) && echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list'
  - 'sudo apt-key --keyring /etc/apt/trusted.gpg.d/Microsoft.gpg adv --keyserver packages.microsoft.com --recv-keys BC528686B50D79E339D3721CEB3E94ADBE1229CF'
  - 'sudo apt-get -y update'
  - 'sudo apt-get -y install docker-ce azure-cli'
  - 'az login --identity'

# final_message
# default: cloud-init boot finished at $TIMESTAMP. Up $UPTIME seconds
# this message is written by cloud-final when the system is finished
# its first boot
final_message: "Explore server is finally up, after $UPTIME seconds"